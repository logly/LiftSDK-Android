apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'jp.co.logly'
version = '0.9.12.2'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

repositories {
    google()
    jcenter()
}


if(hasProperty('target') && target == 'android') {

    apply plugin: 'com.android.library'
    apply plugin: 'com.github.dcendents.android-maven'

    android {
        compileSdkVersion 25
        buildToolsVersion '27.0.3'
        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 25
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        // Rename the aar correctly
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFileName = output.outputFileName
                if (outputFileName.endsWith('.aar')) {
                    def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                    output.outputFileName = new File(fileName)
                }
            }
        }

        dependencies {
            compileOnly 'javax.annotation:jsr250-api:1.0'
        }
    }

    // afterEvaluate {
    //     android.libraryVariants.all { variant ->
    //         def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
    //         task.description = "Create jar artifact for ${variant.name}"
    //         task.dependsOn variant.javaCompile
    //         task.from variant.javaCompile.destinationDir
    //         task.destinationDir = project.file("${project.buildDir}/outputs/jar")
    //         task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
    //         artifacts.add('archives', task);
    //     }
    // }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    artifacts {
        archives sourcesJar
    }

} else {

    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    install {
        repositories.mavenInstaller {
            pom.artifactId = 'lift-sdk'
        }
    }

    task execute(type:JavaExec) {
       main = System.getProperty('mainClass')
       classpath = sourceSets.main.runtimeClasspath
    }
}

dependencies {
    compile 'io.swagger:swagger-annotations:1.5.15'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.5'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'io.gsonfire:gson-fire:1.8.0'
    compile 'org.threeten:threetenbp:1.3.5'
    testImplementation 'junit:junit:4.12'
}

android {
    buildToolsVersion = '28.0.3'
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'Logly-Lift-SDK'
        name = 'lift-sdk'
        userOrg = 'adonishi'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/logly/LiftSDK-Android.git'
        version {
            name = '0.9.12.2'
            desc = 'Logly Lift Mobile SDK for Android'
            released = new Date()
            vcsTag = "${version}"
            //attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Logly Lift Mobile SDK for Android'
                url 'https://github.com/logly/LiftSDK-Android.git'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'adonishi'
                        name 'Ado Nishimura'
                        email 'adonishi@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/logly/LiftSDK-Android.git'
                    developerConnection 'https://github.com/logly/LiftSDK-Android.git'
                    url 'https://github.com/logly/LiftSDK-Android.git'
                }
                dependencies { conf2ScopeMappings.mappings }
            }
        }
    }
}

