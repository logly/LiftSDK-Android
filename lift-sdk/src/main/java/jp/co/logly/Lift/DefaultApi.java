/*
 * Logly lift.json API
 * Logly lift.json API for Lift Mobile SDK
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jp.co.logly.Lift;

import jp.co.logly.ApiInvoker.ApiCallback;
import jp.co.logly.ApiInvoker.ApiClient;
import jp.co.logly.ApiInvoker.ApiException;
import jp.co.logly.ApiInvoker.ApiResponse;
import jp.co.logly.ApiInvoker.Configuration;
import jp.co.logly.ApiInvoker.Pair;
import jp.co.logly.ApiInvoker.ProgressRequestBody;
import jp.co.logly.ApiInvoker.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import jp.co.logly.Lift.Result.InlineResponse200;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient apiClient;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for requestLift
     * @param adspotId Lift adspot ID (required)
     * @param widgetId Lift wiget ID (required)
     * @param url キーとなるページ URL (MDL) (required)
     * @param ref リファラーURL（通常Mobileでは必要なし） (optional)
     * @param toplevel jsonトップレベルhash名: 通常は&#39;items&#39;を指定 (optional, default to items)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call requestLiftCall(Long adspotId, Long widgetId, String url, String ref, String toplevel, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/lift.json";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (adspotId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("adspot_id", adspotId));
        if (widgetId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("widget_id", widgetId));
        if (url != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("url", url));
        if (ref != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("ref", ref));
        if (toplevel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("toplevel", toplevel));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call requestLiftValidateBeforeCall(Long adspotId, Long widgetId, String url, String ref, String toplevel, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'adspotId' is set
        if (adspotId == null) {
            throw new ApiException("Missing the required parameter 'adspotId' when calling requestLift(Async)");
        }
        
        // verify the required parameter 'widgetId' is set
        if (widgetId == null) {
            throw new ApiException("Missing the required parameter 'widgetId' when calling requestLift(Async)");
        }
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling requestLift(Async)");
        }
        

        com.squareup.okhttp.Call call = requestLiftCall(adspotId, widgetId, url, ref, toplevel, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Liftレコメンデーション結果検索
     * Liftレコメンデーション結果検索 注：返される結果数はLogly Lift コンソールの方で設定するが、表示はエリアの空きがある分だけ表示される
     * @param adspotId Lift adspot ID (required)
     * @param widgetId Lift wiget ID (required)
     * @param url キーとなるページ URL (MDL) (required)
     * @param ref リファラーURL（通常Mobileでは必要なし） (optional)
     * @param toplevel jsonトップレベルhash名: 通常は&#39;items&#39;を指定 (optional, default to items)
     * @return InlineResponse200
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse200 requestLift(Long adspotId, Long widgetId, String url, String ref, String toplevel) throws ApiException {
        ApiResponse<InlineResponse200> resp = requestLiftWithHttpInfo(adspotId, widgetId, url, ref, toplevel);
        return resp.getData();
    }

    /**
     * Liftレコメンデーション結果検索
     * Liftレコメンデーション結果検索 注：返される結果数はLogly Lift コンソールの方で設定するが、表示はエリアの空きがある分だけ表示される
     * @param adspotId Lift adspot ID (required)
     * @param widgetId Lift wiget ID (required)
     * @param url キーとなるページ URL (MDL) (required)
     * @param ref リファラーURL（通常Mobileでは必要なし） (optional)
     * @param toplevel jsonトップレベルhash名: 通常は&#39;items&#39;を指定 (optional, default to items)
     * @return ApiResponse&lt;InlineResponse200&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse200> requestLiftWithHttpInfo(Long adspotId, Long widgetId, String url, String ref, String toplevel) throws ApiException {
        com.squareup.okhttp.Call call = requestLiftValidateBeforeCall(adspotId, widgetId, url, ref, toplevel, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse200>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Liftレコメンデーション結果検索 (asynchronously)
     * Liftレコメンデーション結果検索 注：返される結果数はLogly Lift コンソールの方で設定するが、表示はエリアの空きがある分だけ表示される
     * @param adspotId Lift adspot ID (required)
     * @param widgetId Lift wiget ID (required)
     * @param url キーとなるページ URL (MDL) (required)
     * @param ref リファラーURL（通常Mobileでは必要なし） (optional)
     * @param toplevel jsonトップレベルhash名: 通常は&#39;items&#39;を指定 (optional, default to items)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call requestLiftAsync(Long adspotId, Long widgetId, String url, String ref, String toplevel, final ApiCallback<InlineResponse200> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = requestLiftValidateBeforeCall(adspotId, widgetId, url, ref, toplevel, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse200>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
